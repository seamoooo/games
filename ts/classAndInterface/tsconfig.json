{
  "compilerOptions": {
    "target": "ES6",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "commonjs",                     /*　モジュールの設定*/
    "lib": ["DOM", "ES6", "DOM.Iterable", "ScriptHost"],  /* デフォルトはtargetの設定によってよしなに設定してくれている */
    // "sourceMap": true,                     /* 開発者モードでプラウザで表示可能なTSファイルも生成してくれる */
    // "outFile": "./",                       /* Concatenate and emit output to single file. */
    "outDir": "./dist",                        /* コンパイルしたJSの出力先 */
    "rootDir": "./src",                       /* root directoryの設定この外にTSファイルがあるとエラーが発生する */
    "removeComments": true,                /* コメントを削除する */
    // "noEmit": true,                        /* JSを作成しないようにする */
    "noEmitOnError": true,                    /* エラーがあってもJSが作成されない*/

    /* Strict Type-Checking Options */
    "strict": true,                           /* TSの厳格型チェック 下のstrict系が有効になる */
    // "noImpli/citAny": true,                /* 暗黙のanyを許可しない  */
    // "strictNullChecks": true,              /* nullの可能性がある場合、エラーが出る */
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
    // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    /* この3つは品質を担保する */
    "noUnusedLocals": true,                /* 利用されていないローカル変数は許さない　グローバルはOk */
    "noUnusedParameters": true,            /* パラメーターを使用していない場合はエラー*/
    "noImplicitReturns": true,             /* 分岐処理でreturn文がないとエラーになる。*/
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

    /* Module Resolution Options */
    // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                       /* List of folders to include type definitions from. */
    // "types": [],                           /* Type declaration files to be included in compilation. */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* 実験的な機能達 */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "forceConsistentCasingInFileNames": true  /* ファイルの大文字小文字を確認 */
  },
  "exclude": ["node_modules"], //default 除外
  "include": ["src/app.ts", "src/analytics.ts"],　// 含める
}
